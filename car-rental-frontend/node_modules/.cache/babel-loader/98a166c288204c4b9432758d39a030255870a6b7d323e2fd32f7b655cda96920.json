{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\bike-rental\\\\car-rental-frontend\\\\src\\\\components\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent({\n  cars,\n  selectedCar\n}) {\n  _s();\n  const mapRef = useRef(null); // Khởi tạo ref để tham chiếu đến phần tử div chứa bản đồ\n  const [map, setMap] = useState(null); // Lưu trữ đối tượng bản đồ khi đã khởi tạo\n\n  useEffect(() => {\n    // Tạo bản đồ nếu chưa được khởi tạo\n    const newMap = L.map(mapRef.current).setView([21.0285, 105.8542], 13); // Vị trí Hà Nội\n\n    // Thêm lớp bản đồ OpenStreetMap\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(newMap);\n\n    // Lưu đối tượng bản đồ vào state\n    setMap(newMap);\n\n    // Cleanup function để loại bỏ bản đồ khi component bị hủy\n    return () => {\n      newMap.remove();\n    };\n  }, []); // Chạy 1 lần khi component mount\n\n  useEffect(() => {\n    if (map && cars) {\n      // Thêm tất cả các marker cho các xe trên bản đồ\n      cars.forEach(car => {\n        const {\n          lat,\n          lng,\n          brand,\n          model\n        } = car;\n        const popupContent = `<b>${brand} ${model}</b><br />Latitude: ${lat}<br />Longitude: ${lng}`;\n        L.marker([lat, lng]).addTo(map).bindPopup(popupContent);\n      });\n    }\n  }, [map, cars]); // Cập nhật khi bản đồ hoặc danh sách xe thay đổi\n\n  useEffect(() => {\n    if (map && selectedCar) {\n      const {\n        lat,\n        lng,\n        brand,\n        model\n      } = selectedCar;\n      const popupContent = `<b>${brand} ${model}</b><br />Latitude: ${lat}<br />Longitude: ${lng}`;\n\n      // Tạo marker cho xe được chọn và di chuyển bản đồ đến vị trí của xe\n      const selectedMarker = L.marker([lat, lng]).addTo(map).bindPopup(popupContent).openPopup();\n      map.setView([lat, lng], 13); // Di chuyển bản đồ đến vị trí của xe\n    }\n  }, [map, selectedCar]); // Cập nhật khi xe được chọn\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    ref: mapRef,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_s(MapComponent, \"Hq8Bpy2UaQ6aFwSTxod1eSq68gU=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","MapComponent","cars","selectedCar","_s","mapRef","map","setMap","newMap","current","setView","tileLayer","attribution","addTo","remove","forEach","car","lat","lng","brand","model","popupContent","marker","bindPopup","selectedMarker","openPopup","id","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/bike-rental/car-rental-frontend/src/components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport L from \"leaflet\";\r\n\r\nfunction MapComponent({ cars, selectedCar }) {\r\n  const mapRef = useRef(null); // Khởi tạo ref để tham chiếu đến phần tử div chứa bản đồ\r\n  const [map, setMap] = useState(null); // Lưu trữ đối tượng bản đồ khi đã khởi tạo\r\n\r\n  useEffect(() => {\r\n    // Tạo bản đồ nếu chưa được khởi tạo\r\n    const newMap = L.map(mapRef.current).setView([21.0285, 105.8542], 13); // Vị trí Hà Nội\r\n\r\n    // Thêm lớp bản đồ OpenStreetMap\r\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n      attribution:\r\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    }).addTo(newMap);\r\n\r\n    // Lưu đối tượng bản đồ vào state\r\n    setMap(newMap);\r\n\r\n    // Cleanup function để loại bỏ bản đồ khi component bị hủy\r\n    return () => {\r\n      newMap.remove();\r\n    };\r\n  }, []); // Chạy 1 lần khi component mount\r\n\r\n  useEffect(() => {\r\n    if (map && cars) {\r\n      // Thêm tất cả các marker cho các xe trên bản đồ\r\n      cars.forEach((car) => {\r\n        const { lat, lng, brand, model } = car;\r\n        const popupContent = `<b>${brand} ${model}</b><br />Latitude: ${lat}<br />Longitude: ${lng}`;\r\n\r\n        L.marker([lat, lng])\r\n          .addTo(map)\r\n          .bindPopup(popupContent);\r\n      });\r\n    }\r\n  }, [map, cars]); // Cập nhật khi bản đồ hoặc danh sách xe thay đổi\r\n\r\n  useEffect(() => {\r\n    if (map && selectedCar) {\r\n      const { lat, lng, brand, model } = selectedCar;\r\n      const popupContent = `<b>${brand} ${model}</b><br />Latitude: ${lat}<br />Longitude: ${lng}`;\r\n\r\n      // Tạo marker cho xe được chọn và di chuyển bản đồ đến vị trí của xe\r\n      const selectedMarker = L.marker([lat, lng])\r\n        .addTo(map)\r\n        .bindPopup(popupContent)\r\n        .openPopup();\r\n\r\n      map.setView([lat, lng], 13); // Di chuyển bản đồ đến vị trí của xe\r\n    }\r\n  }, [map, selectedCar]); // Cập nhật khi xe được chọn\r\n\r\n  return <div id=\"map\" ref={mapRef} style={{ width: \"100%\", height: \"100%\" }}></div>;\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,CAAC,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,YAAYA,CAAC;EAAEC,IAAI;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7B,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtCF,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,MAAM,GAAGV,CAAC,CAACQ,GAAG,CAACD,MAAM,CAACI,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAEvE;IACAZ,CAAC,CAACa,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EACT;IACJ,CAAC,CAAC,CAACC,KAAK,CAACL,MAAM,CAAC;;IAEhB;IACAD,MAAM,CAACC,MAAM,CAAC;;IAEd;IACA,OAAO,MAAM;MACXA,MAAM,CAACM,MAAM,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERnB,SAAS,CAAC,MAAM;IACd,IAAIW,GAAG,IAAIJ,IAAI,EAAE;MACf;MACAA,IAAI,CAACa,OAAO,CAAEC,GAAG,IAAK;QACpB,MAAM;UAAEC,GAAG;UAAEC,GAAG;UAAEC,KAAK;UAAEC;QAAM,CAAC,GAAGJ,GAAG;QACtC,MAAMK,YAAY,GAAG,MAAMF,KAAK,IAAIC,KAAK,uBAAuBH,GAAG,oBAAoBC,GAAG,EAAE;QAE5FpB,CAAC,CAACwB,MAAM,CAAC,CAACL,GAAG,EAAEC,GAAG,CAAC,CAAC,CACjBL,KAAK,CAACP,GAAG,CAAC,CACViB,SAAS,CAACF,YAAY,CAAC;MAC5B,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACf,GAAG,EAAEJ,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEjBP,SAAS,CAAC,MAAM;IACd,IAAIW,GAAG,IAAIH,WAAW,EAAE;MACtB,MAAM;QAAEc,GAAG;QAAEC,GAAG;QAAEC,KAAK;QAAEC;MAAM,CAAC,GAAGjB,WAAW;MAC9C,MAAMkB,YAAY,GAAG,MAAMF,KAAK,IAAIC,KAAK,uBAAuBH,GAAG,oBAAoBC,GAAG,EAAE;;MAE5F;MACA,MAAMM,cAAc,GAAG1B,CAAC,CAACwB,MAAM,CAAC,CAACL,GAAG,EAAEC,GAAG,CAAC,CAAC,CACxCL,KAAK,CAACP,GAAG,CAAC,CACViB,SAAS,CAACF,YAAY,CAAC,CACvBI,SAAS,CAAC,CAAC;MAEdnB,GAAG,CAACI,OAAO,CAAC,CAACO,GAAG,EAAEC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC,EAAE,CAACZ,GAAG,EAAEH,WAAW,CAAC,CAAC,CAAC,CAAC;;EAExB,oBAAOH,OAAA;IAAK0B,EAAE,EAAC,KAAK;IAACC,GAAG,EAAEtB,MAAO;IAACuB,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpF;AAAC9B,EAAA,CArDQH,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAuDrB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}